# pyproject.toml
[build-system]
requires = ["setuptools>=61.0", "wheel", "pybind11[global]>=2.10"]
build-backend = "setuptools.build_meta"

[project]
name = "pyrex-rocksdb"
version = "0.1.0"
authors = [
  { name="Charilaos Mylonas", email="mylonas.charilaos@gmail.com" },
]
description = "A fast RocksDB wrapper for Python using pybind11."
readme = "README.md"
requires-python = ">=3.8"
keywords = ["rocksdb", "database", "key-value", "pybind11"]

classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: Microsoft :: Windows",
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Topic :: Database",
]

[project.urls]
Homepage = "https://github.com/mylonasc/pyrex"
Repository = "https://github.com/mylonasc/pyrex"

[project.optional-dependencies]
dev = [
    "pytest",
    "sphinx",
    "sphinx-rtd-theme",
    "cibuildwheel",
    "twine"
]

# Crucial for src layout
[tool.setuptools]
packages = ["pyrex"] # Explicitly list your package
package-dir = {"" = "src"} # Tell setuptools to look in 'src' for packages

[tool.cibuildwheel]
# Global options - these apply to all platforms unless overridden in a platform-specific table.
# Do NOT use platform suffixes for these, and they should not be in platform-specific sub-tables.
build = "cp38-* cp39-* cp310-* cp311-* cp312-*"
skip = ["*-muslinux_*"]

# These were previously in [tool.cibuildwheel.windows] but are global options.
force-install = true
debug = true
prerelease-pythons = true
download-url = "https://www.python.org/ftp/python/"


# Linux specific configurations
[tool.cibuildwheel.linux]
before-build = """
  yum install -y rocksdb-devel snappy-devel lz4-devel zlib-devel bzip2-devel || \\
  (apt-get update && apt-get install -y librocksdb-dev libsnappy-dev liblz4-dev zlib1g-dev libbz2-dev)
  echo "--- Debugging inside manylinux container after RocksDB install (via rpm -ql) ---"
  echo "Files installed by rocksdb-devel:"
  rpm -ql rocksdb-devel || true
  echo "Files installed by rocksdb (main library):"
  rpm -ql rocksdb || true
  echo "--- End rpm -ql output ---"
"""
environment = "CFLAGS='-I/usr/include/' LDFLAGS='-L/usr/lib/ -lrocksdb'"


# macOS specific configurations
[tool.cibuildwheel.macos]
# Note: BREW_PREFIX is an environment variable set by the GitHub Actions workflow.
# cibuildwheel picks up environment variables that are present in the runner's environment.
environment = "CFLAGS='-I${BREW_PREFIX}/include/' LDFLAGS='-L${BREW_PREFIX}/lib/ -lrocksdb'"


# Windows specific configurations
[tool.cibuildwheel.windows]
# Only 'build' and 'archs' remain here as they are truly Windows-specific build targets.
build = "cp39-win_amd64"
archs = ["AMD64"]

before-build = """
  $VCPKG_ROOT_WIN = "$env:GITHUB_WORKSPACE\\vcpkg"
  $ROCKSDB_INCLUDE_PATH = Join-Path -Path $VCPKG_ROOT_WIN -ChildPath "installed\\x64-windows\\include"
  $ROCKSDB_LIB_PATH = Join-Path -Path $VCPKG_ROOT_WIN -ChildPath "installed\\x64-windows\\lib"

  Write-Host "Setting INCLUDE environment variable to include: $ROCKSDB_INCLUDE_PATH"
  Write-Host "Setting LIB environment variable to include: $ROCKSDB_LIB_PATH"

  # Append to existing INCLUDE and LIB environment variables.
  # This is the most reliable way to pass paths to MSVC.
  # 'Process' scope makes it available to child processes (the build).
  [System.Environment]::SetEnvironmentVariable('INCLUDE', "$ROCKSDB_INCLUDE_PATH;" + $env:INCLUDE, 'Process')
  [System.Environment]::SetEnvironmentVariable('LIB', "$ROCKSDB_LIB_PATH;" + $env:LIB, 'Process')

  # Also set CFLAGS and LDFLAGS for setuptools/distutils which might pick these up
  # Using quoted paths for robustness against spaces in paths
  $env:CFLAGS = "-I`"$ROCKSDB_INCLUDE_PATH`""
  $env:LDFLAGS = "-L`"$ROCKSDB_LIB_PATH`" -lrocksdb"

  Write-Host "Current INCLUDE environment variable: $env:INCLUDE"
  Write-Host "Current LIB environment variable: $env:LIB"
  Write-Host "Current CFLAGS environment variable: $env:CFLAGS"
  Write-Host "Current LDFLAGS environment variable: $env:LDFLAGS"
"""
